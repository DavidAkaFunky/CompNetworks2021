void post(char* IP_ADDRESS, char* PORT, char* gid, char* uid, struct addrinfo *res, char *text, char *file_name){
    int text_strlen = strlen(text);
    if (text_strlen > 240){
        puts(BIG_TEXT);
        return;
    }
    if (!(is_alphanumerical(file_name, 2) && check_login(uid, true) && check_select(gid)))
        return;
    int fname_strlen = strlen(file_name);
    char message[259];
    bzero(message, 259);
    char text_size[4];
    bzero(text_size, 4);
    sprintf(text_size, "%d", text_strlen);
    sprintf(message, "PST %s %s %s %s", uid, gid, text_size, text);
    if (tcp_connect(IP_ADDRESS, PORT, &tcp_socket, res) == -1 || tcp_send(message, strlen(message)) == -1)
        return;
    if (fname_strlen > 24){
        close(tcp_socket);
        puts(FNAME_LEN_ERR);
        return;
    }
    if (fname_strlen > 0){
        if (file_name[fname_strlen - 4] != '.'){
            close(tcp_socket);
            puts(INV_FILE);
            return;
        }
        char* ext = &(file_name[fname_strlen - 3]);
        if (!(is_alphanumerical(ext, 0))){
            close(tcp_socket);
            return;
        if (!upload_file(file_name))
            return;
    }
    if (tcp_send("\n", 1) == -1)
        return;
    char response[5];
    bzero(response, 5);
    ssize_t nread = tcp_read(response, 4);
    if (nread == -1)
        return;
    if (!strcmp("ERR\n", response)){
        close(tcp_socket);
        puts(GEN_ERR);
        return;
    } 
    if (strcmp("RPT ", response)){
        close(tcp_socket);
        puts(INFO_ERR);
        return;
    }
    bzero(response, 5);
    nread = tcp_read(response, 4);
    if (nread == -1)
        return;
    if (!strcmp("NOK\n", response))
        puts(MSG_SEND_FAIL);
    else {
        if (!digits_only(response, "message ID")){
            close(tcp_socket);
            puts(INFO_ERR);
            return;
        }
        char end[2];
        bzero(end, 2);
        nread = tcp_read(end, 1);
        if (nread == -1)
            return;
        if (!strcmp("\n", end))
            printf("Message sent successfully. Message ID: %s\n", response);
        else
            puts(INFO_ERR);
    }
    close(tcp_socket);
}
